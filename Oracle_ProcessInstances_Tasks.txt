-- This program is licensed under the International License Agreement for Non-Warranted Programs that can be found here: http://www-03.ibm.com/software/sla/sladb.nsf/sla/bla/
-- Last update July 2017, additional feature requests send to: stephan.volz@de.ibm.com 
-- connect to BPMDB to run the SQL statements

-- Collects Oracle configuration parameters (DBA permissions required)

select * from V$SYSTEM_PARAMETER ;

-- Provides statistics information (make sure linesize is set sufficiently large). These statements should be run with the BPMDB datasource user or corresponding filters with the DBA views

select substr(table_name,1,35) as table_name, substr(tablespace_name,1,20) as tablespace_name, num_rows, blocks, empty_blocks, avg_space, chain_cnt, avg_row_len, last_analyzed from USER_TABLES ;
select substr(ui.index_name,1,35) as index_name, substr(ui.table_name,1,35) as table_name, substr(ui.tablespace_name,1,30) as tablespace_name, substr(uic.column_name,1,35) as column_name, uic.column_position, ui.status, ui.clustering_factor, ui.last_analyzed from USER_INDEXES ui, USER_IND_COLUMNS uic where ui.index_name = uic.index_name order by ui.index_name, uic.column_position;


-- Provides process instances grouped by process instances state

select snap.name as "name", 
       bpd.snapshot_id as "snapshot id", 
       code.NAME as "status",               
       count(bpd.EXECUTION_STATUS) as "number of instances" 
from LSW_BPD_INSTANCE bpd 
       left outer join lsw_bpd_status_codes code on code.STATUS_ID = bpd.execution_status 
        left outer join lsw_snapshot snap on bpd.snapshot_id = snap.snapshot_id
group by snap.name, bpd.snapshot_id, code.NAME
order by snap.name, bpd.snapshot_id, code.NAME ;


-- Provides task states grouped by task steps

select snap.name as "snapshot name", 
       t.SNAPSHOT_ID, 
       t.SUBJECT as "subject", 
       code.NAME as "status", 
       COUNT(t.STATUS) as "number"
from lsw_task t 
       left outer join LSW_TASK_STATUS_CODES code on code.STATUS_VALUE = t.STATUS
       left outer join LSW_SNAPSHOT snap on t.snapshot_id = snap.snapshot_id
group by  snap.name, t.SNAPSHOT_ID, t.SUBJECT, code.NAME
order by snap.name, t.SNAPSHOT_ID, t.SUBJECT;

-- Provides a connection between closed tasks for completed and running process instances

select     snap.name as "snapshot name", 
           bpd.snapshot_id as "snapshot id",        
           count(distinct bpd.bpd_instance_id) as "number completed PI",
           count(ta.status) as "number of closed tasks" 
from LSW_BPD_INSTANCE bpd
        left outer join lsw_snapshot snap on bpd.snapshot_id = snap.snapshot_id
        left outer join lsw_task ta on bpd.bpd_instance_id = ta.bpd_instance_id
where bpd.bpd_instance_id = ta.bpd_instance_id and bpd.execution_status = 2
group by snap.name, bpd.snapshot_id;

--
select  snap.name as "snapshot name", 
        bpd.snapshot_id as "snapshot id",        
        count(distinct bpd.bpd_instance_id) as "number running PI",
        count(ta.status) as "number of closed tasks" 
from LSW_BPD_INSTANCE bpd
        left outer join lsw_snapshot snap on bpd.snapshot_id = snap.snapshot_id
        left outer join lsw_task ta on bpd.bpd_instance_id = ta.bpd_instance_id
where bpd.bpd_instance_id = ta.bpd_instance_id and bpd.execution_status = 1 and ta.status = 32
group by snap.name, bpd.snapshot_id;

-- Provides the upper limit for system tasks in the system
select user_id, activity_name, status, count(*) from LSW_TASK group by user_id, activity_name, status;

-- Provides an overview of group types:
SELECT CASE G.GROUP_TYPE
        WHEN 0 THEN 'Security Group'
        WHEN 1 THEN 'Participant Group'
        WHEN 2 THEN 'Adhoc Group'
        WHEN 3 THEN 'Internal Group'
        WHEN 4 THEN 'Dynamic Group'
      END "Group Type",
count(G.GROUP_ID) "Count"
FROM LSW_USR_GRP_XREF G
GROUP BY G.GROUP_TYPE;
